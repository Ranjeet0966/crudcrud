const myForm = document.querySelector('#my-form');
const nameInput = document.querySelector('#name');
const mobileInput = document.querySelector('#mobile');
const emailInput = document.querySelector('#email');
const msg = document.querySelector('.msg');
const userList = document.querySelector('#users');

myForm.addEventListener('submit', onSubmit);
userList.addEventListener('click', handleUserAction);

let users = [];

function onSubmit(e) {
  e.preventDefault();

  if (nameInput.value === '' || emailInput.value === '') {
    msg.classList.add('error');
    msg.innerHTML = 'Please enter all fields';
    setTimeout(() => msg.remove(), 3000);
  } else {
    const user = {
      name: nameInput.value,
      email: emailInput.value,
      mobile: mobileInput.value
    };

    axios.post("https://crudcrud.com/api/614e273894b34ff088712dc03cee1ccf/Bookingapp", user)
      .then((response) => {
        users = [...users, response.data];
        displayUsers(users);

        nameInput.value = '';
        emailInput.value = '';
        mobileInput.value = '';
      })
      .catch((err) => {
        document.body.innerHTML = document.body.innerHTML + "<h4>Something went wrong<h4>";
        console.log(err);
      });
  }
}

function displayUsers(users) {
  userList.innerHTML = ''; // Clear existing list items

  users.forEach((user, index) => {
    const li = document.createElement('li');
    li.appendChild(document.createTextNode(`${user.name}: ${user.email}: ${user.mobile}`));

    const editButton = document.createElement('button');
    editButton.className = 'edit-btn';
    editButton.textContent = 'Edit';
    editButton.dataset.index = index;

    const deleteButton = document.createElement('button');
    deleteButton.className = 'delete-btn';
    deleteButton.textContent = 'Delete';
    deleteButton.dataset.index = index;

    li.appendChild(editButton);
    li.appendChild(deleteButton);
    userList.appendChild(li);
  });
}

function handleUserAction(e) {
  if (e.target.classList.contains('edit-btn')) {
    const userIndex = parseInt(e.target.dataset.index);
    const user = users[userIndex];
    emailInput.value = user.email;
  } else if (e.target.classList.contains('delete-btn')) {
    const userIndex = parseInt(e.target.dataset.index);
    const user = users[userIndex];
    //delete data from crudcrud
    axios.delete(`https://crudcrud.com/api/614e273894b34ff088712dc03cee1ccf/Bookingapp/${user._id}`)
      .then(() => {
        users.splice(userIndex, 1); // Remove the user from the local array
        localStorage.setItem('userData', JSON.stringify(users)); // Update local storage
        displayUsers(users); // Update the displayed list
      })
      .catch((err) => {
        console.log(err);
      });
  }
}

document.addEventListener('DOMContentLoaded', () => {
  axios.get("https://crudcrud.com/api/614e273894b34ff088712dc03cee1ccf/Bookingapp")
    .then((response) => {
      users = response.data; // Update the users array with the fetched data
      displayUsers(users);
    })
    .catch((err) => {
      console.log(err);
    });

  const storedData = localStorage.getItem('userData');
  users = storedData ? JSON.parse(storedData) : [];

  if (!Array.isArray(users)) {
    users = [];
  }

  displayUsers(users);
});
